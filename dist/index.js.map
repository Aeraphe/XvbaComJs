{"version":3,"file":"./index.js","mappings":";;;;;;;;;;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,sDAAY;AACjC,YAAY,mBAAO,CAAC,yEAAO;;AAE3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS,OAAO;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrLA;AACA;AACA;AACA;AACA;;AAEA,UAAU,iHAAmC;AAC7C,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN,MAAM,qBAAqB;AAC3B;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;;;;;;;;;;;ACvLA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd,eAAe;AACf,cAAc;AACd,eAAe;AACf,uGAAgC;;AAEhC;AACA;AACA;;AAEA,aAAa;AACb,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;;AAElB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA,EAAE,aAAa;AACf,EAAE,aAAa;;AAEf;AACA;;AAEA,kBAAkB,SAAS;AAC3B,6BAA6B;AAC7B;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACzMA;AACA;AACA;AACA;;AAEA;AACA,EAAE,wHAAwC;AAC1C,EAAE;AACF,EAAE,kHAAqC;AACvC;;;;;;;;;;;ACTA;AACA;AACA;;AAEA,UAAU,mBAAO,CAAC,gBAAK;AACvB,WAAW,mBAAO,CAAC,kBAAM;;AAEzB;AACA;AACA;AACA;AACA;;AAEA,UAAU,iHAAmC;AAC7C,YAAY;AACZ,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;;AAEjB;AACA;AACA;;AAEA,cAAc;;AAEd;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,4CAA4C,wBAAwB;;AAEpE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC,IAAI;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,mBAAO,CAAC,cAAI;AAC3B,4CAA4C,kBAAkB;AAC9D;AACA;;AAEA;AACA;AACA,gBAAgB,mBAAO,CAAC,gBAAK;AAC7B;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;ACvPA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvJa;;AAEb,sBAAsB,mBAAO,CAAC,sDAAe;AAC7C,sBAAsB,mBAAO,CAAC,wEAAwB;AACtD,sBAAsB,mBAAO,CAAC,4EAAuB;AACrD,sBAAsB,mBAAO,CAAC,4FAAkC;AAChE,sBAAsB,mBAAO,CAAC,0FAA2B;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,UAAU;AACV;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,UAAU;AACV;AACA;;;;;;;;;;;;AC7Da;;AAEb;AACA;;;;;;;;;;;;ACHa;;AAEb,iBAAiB,mBAAO,CAAC,gFAAkB,sBAAsB,mBAAO,CAAC,4DAAQ;;;;;;;;;;;;ACFpE;;AAEb;AACA;AACA;AACA,SAAS;AACT,eAAe,YAAY,IAAI,cAAc;AAC7C;AACA;;;;;;;;;;;;ACRa;;AAEb,YAAY,mBAAO,CAAC,4DAAS;AAC7B,YAAY,mBAAO,CAAC,oEAAgB;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtBa;;AAEb,iBAAiB,mBAAO,CAAC,iEAAkB,KAAK;;AAEhD,kCAAkC;;;;;;;;;;;;ACJrB;;AAEb,iBAAiB,mBAAO,CAAC,8EAAkB,oBAAoB,mBAAO,CAAC,0DAAQ;;;;;;;;;;;;ACFlE;;AAEb;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;ACTa;;AAEb,cAAc,mBAAO,CAAC,8DAAa;;AAEnC;;AAEA,qCAAqC;;;;;;;;;;;;ACNxB;;AAEb,cAAc,mBAAO,CAAC,6DAAY;;AAElC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;;;;;;;;;;;ACnBa;;AAEb,cAAc,mBAAO,CAAC,6DAAY;;AAElC;AACA;AACA;AACA;;;;;;;;;;;;ACPa;;AAEb,iBAAiB,mBAAO,CAAC,0FAAkB,kCAAkC,mBAAO,CAAC,sEAAQ;;;;;;;;;;;;ACFhF;;AAEb;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACPa;;AAEb;;AAEA;AACA;AACA;;;;;;;;;;;;ACNa;;AAEb,iBAAiB,mBAAO,CAAC,qEAAkB;AAC3C,GAAG,4FAAiC;AACpC,GAAG,mBAAO,CAAC,yDAAY;;;;;;;;;;;;ACJV;;AAEb,iBAAiB,mBAAO,CAAC,gEAAiB;AAC1C,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACnBa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRa;;AAEb,QAAQ,mBAAO,CAAC,oCAAG;;AAEnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;AC5Ba;;AAEb,mBAAmB,mBAAO,CAAC,oCAAG;AAC9B,mBAAmB,4FAAiC;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;;;;;;;;;;;ACjCa;;AAEb,qBAAqB,mBAAO,CAAC,oCAAG;AAChC,qBAAqB,mBAAO,CAAC,8EAA0B;;AAEvD;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;;;;;;;;;;;;ACtBA;;AAEa;;AAEb,2BAA2B,mBAAO,CAAC,oCAAG;AACtC,2BAA2B,mBAAO,CAAC,uEAAmB;AACtD,2BAA2B,4FAAiC;AAC5D,2BAA2B,mBAAO,CAAC,2FAA6B;AAChE,2BAA2B,mBAAO,CAAC,6GAAsC;AACzE,2BAA2B,mBAAO,CAAC,2GAAqC;;AAExE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,uBAAuB;AACtD,CAAC;;AAED;AACA;AACA;AACA,2BAA2B,iEAAiE;AAC5F,0BAA0B,8BAA8B;AACxD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtFa;;AAEb,eAAe,mBAAO,CAAC,2DAAa;;AAEpC;AACA;AACA;AACA;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA,GAAG;AACH,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;;;;;;;;;;;AC9BY;;AAEb,iBAAiB,mBAAO,CAAC,0EAAkB,mBAAmB,mBAAO,CAAC,0EAAkB;;;;;;;;;;;;ACF3E;;AAEb;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNa;;AAEb;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACPA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AChKA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,YAAY,mBAAO,CAAC,0EAAO;AAC3B,iBAAiB,mBAAO,CAAC,wDAAa;AACtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN,0CAA0C,IAAI;AAC9C;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oCAAoC;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;AC1Ta;;AAEb,wBAAwB,2EAA2E,kCAAkC,wBAAwB,OAAO,kCAAkC,mIAAmI;;AAEzU;;AAEA;AACA;AACA;AACA,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA,IAAI;AACJ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;;AAGA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI,eAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,IAAI,iBAAiB;AACrB;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe;AACnB;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,8EAAU;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;AClLa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAO,CAAC,sCAAI;AACrC;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA;;AAEA,oBAAoB,sBAAsB;AAC1C;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0EAA0E,aAAa;AACvF;AACA;;AAEA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA;;AAEA;AACA,OAAO,GAAG;;AAEV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA,gBAAgB,kCAAkC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,aAAa;AACb;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gDAAgD,SAAS;AACzD;AACA;AACA;AACA;;AAEA,gDAAgD,SAAS;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACvPa;;AAEb;AACA;AACA;AACA;AACA;AACA,EAAE,yHAAwC;AAC1C,EAAE;AACF,EAAE,mHAAqC;AACvC;;;;;;;;;;;;;ACVa;;AAEb;AACA;AACA;AACA,UAAU,mBAAO,CAAC,gBAAK;;AAEvB,WAAW,mBAAO,CAAC,kBAAM;AACzB;AACA;AACA;;;AAGA,YAAY;AACZ,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;AACjB;AACA;AACA;;AAEA,cAAc;;AAEd;AACA;AACA;AACA,sBAAsB,mBAAO,CAAC,8DAAgB;;AAE9C;AACA,IAAI,cAAc;AAClB;AACA,EAAE,iBAAiB,4DAA4D;;AAE/E;AACA;AACA;AACA;AACA;;;AAGA,mBAAmB;AACnB;AACA,CAAC;AACD;AACA;AACA;AACA,GAAG,GAAG;;AAEN;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,CAAC,IAAI;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,EAAE;AACjD,0CAA0C;AAC1C;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;;AAGA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,8EAAU;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;AC/Ka;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,kBAAM;AACzB,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,YAAY,mBAAO,CAAC,2EAAO;;AAE3B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;AC1Wa;;AAEb,wBAAwB,2EAA2E,kCAAkC,wBAAwB,OAAO,kCAAkC,mIAAmI;;AAEzU;;AAEA;AACA;AACA;AACA,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA,IAAI;AACJ;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;;AAGA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI,eAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,IAAI,iBAAiB;AACrB;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe;AACnB;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,+EAAU;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;AClLa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAO,CAAC,sCAAI;AACrC;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA;;AAEA,oBAAoB,sBAAsB;AAC1C;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0EAA0E,aAAa;AACvF;AACA;;AAEA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA;;AAEA;AACA,OAAO,GAAG;;AAEV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA,gBAAgB,kCAAkC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,aAAa;AACb;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gDAAgD,SAAS;AACzD;AACA;AACA;AACA;;AAEA,gDAAgD,SAAS;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,aAAa;AACb;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACvPa;;AAEb;AACA;AACA;AACA;AACA;AACA,EAAE,0HAAwC;AAC1C,EAAE;AACF,EAAE,oHAAqC;AACvC;;;;;;;;;;;;;ACVa;;AAEb;AACA;AACA;AACA,UAAU,mBAAO,CAAC,gBAAK;;AAEvB,WAAW,mBAAO,CAAC,kBAAM;AACzB;AACA;AACA;;;AAGA,YAAY;AACZ,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;AACjB;AACA;AACA;;AAEA,cAAc;;AAEd;AACA;AACA;AACA,sBAAsB,mBAAO,CAAC,8DAAgB;;AAE9C;AACA,IAAI,cAAc;AAClB;AACA,EAAE,iBAAiB,4DAA4D;;AAE/E;AACA;AACA;AACA;AACA;;;AAGA,mBAAmB;AACnB;AACA,CAAC;AACD;AACA;AACA;AACA,GAAG,GAAG;;AAEN;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,CAAC,IAAI;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,EAAE;AACjD,0CAA0C;AAC1C;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;;AAGA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,+EAAU;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;AC/Ka;AACb,WAAW,mBAAO,CAAC,cAAI;AACvB,YAAY,mBAAO,CAAC,gBAAK;AACzB,gBAAgB,mBAAO,CAAC,kDAAU;;AAElC,OAAO,KAAK;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,gCAAgC,IAAI;AACxE;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAiC,GAAG;AACpC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;A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","sources":[".././node_modules/array-index/index.js",".././node_modules/array-index/node_modules/debug/src/browser.js",".././node_modules/array-index/node_modules/debug/src/debug.js",".././node_modules/array-index/node_modules/debug/src/index.js",".././node_modules/array-index/node_modules/debug/src/node.js",".././node_modules/array-index/node_modules/ms/index.js",".././node_modules/d/index.js",".././node_modules/es5-ext/function/noop.js",".././node_modules/es5-ext/object/assign/index.js",".././node_modules/es5-ext/object/assign/is-implemented.js",".././node_modules/es5-ext/object/assign/shim.js",".././node_modules/es5-ext/object/is-value.js",".././node_modules/es5-ext/object/keys/index.js",".././node_modules/es5-ext/object/keys/is-implemented.js",".././node_modules/es5-ext/object/keys/shim.js",".././node_modules/es5-ext/object/normalize-options.js",".././node_modules/es5-ext/object/valid-value.js",".././node_modules/es5-ext/string/\u0000#/contains/index.js",".././node_modules/es5-ext/string/\u0000#/contains/is-implemented.js",".././node_modules/es5-ext/string/\u0000#/contains/shim.js",".././node_modules/es6-symbol/index.js",".././node_modules/es6-symbol/is-implemented.js",".././node_modules/es6-symbol/is-symbol.js",".././node_modules/es6-symbol/lib/private/generate-name.js",".././node_modules/es6-symbol/lib/private/setup/standard-symbols.js",".././node_modules/es6-symbol/lib/private/setup/symbol-registry.js",".././node_modules/es6-symbol/polyfill.js",".././node_modules/es6-symbol/validate-symbol.js",".././node_modules/ext/global-this/implementation.js",".././node_modules/ext/global-this/index.js",".././node_modules/ext/global-this/is-implemented.js",".././node_modules/has-flag/index.js",".././node_modules/ms/index.js",".././node_modules/ref-array-di/lib/array.js",".././node_modules/ref-array-di/node_modules/debug/src/browser.js",".././node_modules/ref-array-di/node_modules/debug/src/common.js",".././node_modules/ref-array-di/node_modules/debug/src/index.js",".././node_modules/ref-array-di/node_modules/debug/src/node.js",".././node_modules/ref-struct-di/lib/struct.js",".././node_modules/ref-struct-di/node_modules/debug/src/browser.js",".././node_modules/ref-struct-di/node_modules/debug/src/common.js",".././node_modules/ref-struct-di/node_modules/debug/src/index.js",".././node_modules/ref-struct-di/node_modules/debug/src/node.js",".././node_modules/supports-color/index.js",".././src/XvbaComJs/UnKnow.ts",".././src/XvbaComJs/XvbaCom.ts",".././src/XvbaComJs/index.ts",".././src/api/Ol32/api.ts",".././node_modules/type/function/is.js",".././node_modules/type/object/is.js",".././node_modules/type/plain-function/is.js",".././node_modules/type/prototype/is.js",".././node_modules/type/value/is.js","../external commonjs2 \"ffi-napi\"","../external commonjs2 \"ref-napi\"","../external node-commonjs \"assert\"","../external node-commonjs \"fs\"","../external node-commonjs \"net\"","../external node-commonjs \"os\"","../external node-commonjs \"path\"","../external node-commonjs \"tty\"","../external node-commonjs \"util\"","../webpack/bootstrap",".././src/index.ts"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar Symbol = require('es6-symbol');\nvar debug = require('debug')('array-index');\n\nvar get = Symbol('get');\nvar set = Symbol('set');\nvar length = Symbol('length');\n\n/**\n * JavaScript Array \"length\" is bound to an unsigned 32-bit int.\n * See: http://stackoverflow.com/a/6155063/376773\n */\n\nvar MAX_LENGTH = Math.pow(2, 32);\n\n/**\n * Module exports.\n */\n\nmodule.exports = ArrayIndex;\nArrayIndex.get = get;\nArrayIndex.set = set;\n\n/**\n * Subclass this.\n */\n\nfunction ArrayIndex (_length) {\n  Object.defineProperty(this, 'length', {\n    get: getLength,\n    set: setLength,\n    enumerable: false,\n    configurable: true\n  });\n\n  this[length] = 0;\n\n  if (arguments.length > 0) {\n    setLength.call(this, _length);\n  }\n}\n\n/**\n * You overwrite the \"get\" Symbol in your subclass.\n */\n\nArrayIndex.prototype[ArrayIndex.get] = function () {\n  throw new Error('you must implement the `ArrayIndex.get` Symbol');\n};\n\n/**\n * You overwrite the \"set\" Symbol in your subclass.\n */\n\nArrayIndex.prototype[ArrayIndex.set] = function () {\n  throw new Error('you must implement the `ArrayIndex.set` Symbol');\n};\n\n/**\n * Converts this array class into a real JavaScript Array. Note that this\n * is a \"flattened\" array and your defined getters and setters won't be invoked\n * when you interact with the returned Array. This function will call the\n * getter on every array index of the object.\n *\n * @return {Array} The flattened array\n * @api public\n */\n\nArrayIndex.prototype.toArray = function toArray () {\n  var i = 0;\n  var l = this.length;\n  var array = new Array(l);\n  for (; i < l; i++) {\n    array[i] = this[i];\n  }\n  return array;\n};\n\n/**\n * Basic support for `JSON.stringify()`.\n */\n\nArrayIndex.prototype.toJSON = function toJSON () {\n  return this.toArray();\n};\n\n/**\n * toString() override. Use Array.prototype.toString().\n */\n\nArrayIndex.prototype.toString = function toString () {\n  var a = this.toArray();\n  return a.toString.apply(a, arguments);\n};\n\n/**\n * inspect() override. For the REPL.\n */\n\nArrayIndex.prototype.inspect = function inspect () {\n  var a = this.toArray();\n  Object.keys(this).forEach(function (k) {\n    a[k] = this[k];\n  }, this);\n  return a;\n};\n\n/**\n * Getter for the \"length\" property.\n * Returns the value of the \"length\" Symbol.\n */\n\nfunction getLength () {\n  debug('getting \"length\": %o', this[length]);\n  return this[length];\n};\n\n/**\n * Setter for the \"length\" property.\n * Calls \"ensureLength()\", then sets the \"length\" Symbol.\n */\n\nfunction setLength (v) {\n  debug('setting \"length\": %o', v);\n  return this[length] = ensureLength(this, v);\n};\n\n/**\n * Ensures that getters/setters from 0 up to \"_newLength\" have been defined\n * on `Object.getPrototypeOf(this)`.\n *\n * @api private\n */\n\nfunction ensureLength (self, _newLength) {\n  var newLength;\n  if (_newLength > MAX_LENGTH) {\n    newLength = MAX_LENGTH;\n  } else {\n    newLength = _newLength | 0;\n  }\n  var proto = Object.getPrototypeOf(self);\n  var cur = proto[length] | 0;\n  var num = newLength - cur;\n  if (num > 0) {\n    var desc = {};\n    debug('creating a descriptor object with %o entries', num);\n    for (var i = cur; i < newLength; i++) {\n      desc[i] = setup(i);\n    }\n    debug('calling `Object.defineProperties()` with %o entries', num);\n    Object.defineProperties(proto, desc);\n    proto[length] = newLength;\n  }\n  return newLength;\n}\n\n/**\n * Returns a property descriptor for the given \"index\", with \"get\" and \"set\"\n * functions created within the closure.\n *\n * @api private\n */\n\nfunction setup (index) {\n  function get () {\n    return this[ArrayIndex.get](index);\n  }\n  function set (v) {\n    return this[ArrayIndex.set](index, v);\n  }\n  return {\n    enumerable: true,\n    configurable: true,\n    get: get,\n    set: set\n  };\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","\"use strict\";\n\nvar isValue         = require(\"type/value/is\")\n  , isPlainFunction = require(\"type/plain-function/is\")\n  , assign          = require(\"es5-ext/object/assign\")\n  , normalizeOpts   = require(\"es5-ext/object/normalize-options\")\n  , contains        = require(\"es5-ext/string/#/contains\");\n\nvar d = (module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif (arguments.length < 2 || typeof dscr !== \"string\") {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t\tw = contains.call(dscr, \"w\");\n\t} else {\n\t\tc = w = true;\n\t\te = false;\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n});\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== \"string\") {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (!isValue(get)) {\n\t\tget = undefined;\n\t} else if (!isPlainFunction(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (!isValue(set)) {\n\t\tset = undefined;\n\t} else if (!isPlainFunction(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t} else {\n\t\tc = true;\n\t\te = false;\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n","\"use strict\";\n\n// eslint-disable-next-line no-empty-function\nmodule.exports = function () {};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.assign : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== \"function\") return false;\n\tobj = { foo: \"raz\" };\n\tassign(obj, { bar: \"dwa\" }, { trzy: \"trzy\" });\n\treturn obj.foo + obj.bar + obj.trzy === \"razdwatrzy\";\n};\n","\"use strict\";\n\nvar keys  = require(\"../keys\")\n  , value = require(\"../valid-value\")\n  , max   = Math.max;\n\nmodule.exports = function (dest, src/*, …srcn*/) {\n\tvar error, i, length = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry {\n\t\t\tdest[key] = src[key];\n\t\t} catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < length; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n","\"use strict\";\n\nvar _undefined = require(\"../function/noop\")(); // Support ES3 engines\n\nmodule.exports = function (val) { return val !== _undefined && val !== null; };\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.keys : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys(\"primitive\");\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nvar isValue = require(\"../is-value\");\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) { return keys(isValue(object) ? Object(object) : object); };\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function (opts1/*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (!isValue(options)) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? String.prototype.contains : require(\"./shim\");\n","\"use strict\";\n\nvar str = \"razdwatrzy\";\n\nmodule.exports = function () {\n\tif (typeof str.contains !== \"function\") return false;\n\treturn str.contains(\"dwa\") === true && str.contains(\"foo\") === false;\n};\n","\"use strict\";\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? require(\"ext/global-this\").Symbol\n\t: require(\"./polyfill\");\n","\"use strict\";\n\nvar global     = require(\"ext/global-this\")\n  , validTypes = { object: true, symbol: true };\n\nmodule.exports = function () {\n\tvar Symbol = global.Symbol;\n\tvar symbol;\n\tif (typeof Symbol !== \"function\") return false;\n\tsymbol = Symbol(\"test symbol\");\n\ttry { String(symbol); }\n\tcatch (e) { return false; }\n\n\t// Return 'true' also for polyfills\n\tif (!validTypes[typeof Symbol.iterator]) return false;\n\tif (!validTypes[typeof Symbol.toPrimitive]) return false;\n\tif (!validTypes[typeof Symbol.toStringTag]) return false;\n\n\treturn true;\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\tif (!value) return false;\n\tif (typeof value === \"symbol\") return true;\n\tif (!value.constructor) return false;\n\tif (value.constructor.name !== \"Symbol\") return false;\n\treturn value[value.constructor.toStringTag] === \"Symbol\";\n};\n","\"use strict\";\n\nvar d = require(\"d\");\n\nvar create = Object.create, defineProperty = Object.defineProperty, objPrototype = Object.prototype;\n\nvar created = create(null);\nmodule.exports = function (desc) {\n\tvar postfix = 0, name, ie11BugWorkaround;\n\twhile (created[desc + (postfix || \"\")]) ++postfix;\n\tdesc += postfix || \"\";\n\tcreated[desc] = true;\n\tname = \"@@\" + desc;\n\tdefineProperty(\n\t\tobjPrototype,\n\t\tname,\n\t\td.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t})\n\t);\n\treturn name;\n};\n","\"use strict\";\n\nvar d            = require(\"d\")\n  , NativeSymbol = require(\"ext/global-this\").Symbol;\n\nmodule.exports = function (SymbolPolyfill) {\n\treturn Object.defineProperties(SymbolPolyfill, {\n\t\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t\t// fallback to eventual native implementation of given symbol\n\t\thasInstance: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill(\"hasInstance\")\n\t\t),\n\t\tisConcatSpreadable: d(\n\t\t\t\"\",\n\t\t\t(NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\t\t\tSymbolPolyfill(\"isConcatSpreadable\")\n\t\t),\n\t\titerator: d(\"\", (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill(\"iterator\")),\n\t\tmatch: d(\"\", (NativeSymbol && NativeSymbol.match) || SymbolPolyfill(\"match\")),\n\t\treplace: d(\"\", (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill(\"replace\")),\n\t\tsearch: d(\"\", (NativeSymbol && NativeSymbol.search) || SymbolPolyfill(\"search\")),\n\t\tspecies: d(\"\", (NativeSymbol && NativeSymbol.species) || SymbolPolyfill(\"species\")),\n\t\tsplit: d(\"\", (NativeSymbol && NativeSymbol.split) || SymbolPolyfill(\"split\")),\n\t\ttoPrimitive: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill(\"toPrimitive\")\n\t\t),\n\t\ttoStringTag: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill(\"toStringTag\")\n\t\t),\n\t\tunscopables: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill(\"unscopables\")\n\t\t)\n\t});\n};\n","\"use strict\";\n\nvar d              = require(\"d\")\n  , validateSymbol = require(\"../../../validate-symbol\");\n\nvar registry = Object.create(null);\n\nmodule.exports = function (SymbolPolyfill) {\n\treturn Object.defineProperties(SymbolPolyfill, {\n\t\tfor: d(function (key) {\n\t\t\tif (registry[key]) return registry[key];\n\t\t\treturn (registry[key] = SymbolPolyfill(String(key)));\n\t\t}),\n\t\tkeyFor: d(function (symbol) {\n\t\t\tvar key;\n\t\t\tvalidateSymbol(symbol);\n\t\t\tfor (key in registry) {\n\t\t\t\tif (registry[key] === symbol) return key;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t})\n\t});\n};\n","// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n\"use strict\";\n\nvar d                    = require(\"d\")\n  , validateSymbol       = require(\"./validate-symbol\")\n  , NativeSymbol         = require(\"ext/global-this\").Symbol\n  , generateName         = require(\"./lib/private/generate-name\")\n  , setupStandardSymbols = require(\"./lib/private/setup/standard-symbols\")\n  , setupSymbolRegistry  = require(\"./lib/private/setup/symbol-registry\");\n\nvar create = Object.create\n  , defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty;\n\nvar SymbolPolyfill, HiddenSymbol, isNativeSafe;\n\nif (typeof NativeSymbol === \"function\") {\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n} else {\n\tNativeSymbol = null;\n}\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError(\"Symbol is not a constructor\");\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError(\"Symbol is not a constructor\");\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = description === undefined ? \"\" : String(description);\n\treturn defineProperties(symbol, {\n\t\t__description__: d(\"\", description),\n\t\t__name__: d(\"\", generateName(description))\n\t});\n};\n\nsetupStandardSymbols(SymbolPolyfill);\nsetupSymbolRegistry(SymbolPolyfill);\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d(\"\", function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return \"Symbol (\" + validateSymbol(this).__description__ + \")\"; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(\n\tSymbolPolyfill.prototype,\n\tSymbolPolyfill.toPrimitive,\n\td(\"\", function () {\n\t\tvar symbol = validateSymbol(this);\n\t\tif (typeof symbol === \"symbol\") return symbol;\n\t\treturn symbol.toString();\n\t})\n);\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d(\"c\", \"Symbol\"));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toStringTag])\n);\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive])\n);\n","\"use strict\";\n\nvar isSymbol = require(\"./is-symbol\");\n\nmodule.exports = function (value) {\n\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\treturn value;\n};\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of Object.prototype being sealed (via preventExtensions, seal or freeze)\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ is resolved with global context, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? globalThis : require(\"./implementation\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tif (typeof globalThis !== \"object\") return false;\n\tif (!globalThis) return false;\n\treturn globalThis.Array === Array;\n};\n","'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * Module dependencies.\n */\n\nvar assert = require('assert')\nvar debug = require('debug')('ref:array')\nvar ArrayIndex = require('array-index')\nvar isArray = Array.isArray\n\n/**\n * The Array \"type\" constructor.\n * The returned constructor's API is highly influenced by the WebGL\n * TypedArray API.\n */\n\nmodule.exports = function (_ref) {\n\nvar Array_ = function Array (_type, _length) {\n  debug('defining new array \"type\"')\n  var type = _ref.coerceType(_type)\n  var fixedLength = _length | 0\n\n  /**\n   * This is the ArrayType \"constructor\" that gets returned.\n   */\n\n  function ArrayType (data, length) {\n    if (!(this instanceof ArrayType)) {\n      return new ArrayType(data, length)\n    }\n    debug('creating new array instance')\n    ArrayIndex.call(this)\n    var item_size = ArrayType.BYTES_PER_ELEMENT\n    if (0 === arguments.length) {\n      // new IntArray()\n      // use the \"fixedLength\" if provided, otherwise throw an Error\n      if (fixedLength > 0) {\n        this.length = fixedLength\n        this.buffer = Buffer.alloc(this.length * item_size)\n      } else {\n        throw new Error('A \"length\", \"array\" or \"buffer\" must be passed as the first argument')\n      }\n    } else if ('number' == typeof data) {\n      // new IntArray(69)\n      this.length = data\n      this.buffer = Buffer.alloc(this.length * item_size)\n    } else if (isArray(data)) {\n      // new IntArray([ 1, 2, 3, 4, 5 ], {len})\n      // use optional \"length\" if provided, otherwise use \"fixedLength, otherwise\n      // use the Array's .length\n      var len = 0\n      if (null != length) {\n        len = length\n      } else if (fixedLength > 0) {\n        len = fixedLength\n      } else {\n        len = data.length\n      }\n      if (data.length < len) {\n        throw new Error('array length must be at least ' + len + ', got ' + data.length)\n      }\n      this.length = len\n      this.buffer = Buffer.alloc(len * item_size)\n      for (var i = 0; i < len; i++) {\n        this[i] = data[i]\n      }\n    } else if (Buffer.isBuffer(data)) {\n      // new IntArray(Buffer(8))\n      var len = 0\n      if (null != length) {\n        len = length\n      } else if (fixedLength > 0) {\n        len = fixedLength\n      } else {\n        len = data.length / item_size | 0\n      }\n      var expectedLength = item_size * len\n      this.length = len\n      if (data.length != expectedLength) {\n        if (data.length < expectedLength) {\n          throw new Error('buffer length must be at least ' + expectedLength + ', got ' + data.length)\n        } else {\n          debug('resizing buffer from %d to %d', data.length, expectedLength)\n          data = data.slice(0, expectedLength)\n        }\n      }\n      this.buffer = data\n    }\n  }\n\n  // make array instances inherit from our `ArrayIndex.prototype`\n  ArrayType.prototype = Object.create(ArrayIndex.prototype, {\n    constructor: {\n      value: ArrayType,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    },\n    // \"buffer\" is the backing buffer instance\n    buffer: {\n      value: _ref.NULL,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    },\n    // \"node-ffi\" calls this when passed an array instance to an ffi'd function\n    ref: {\n      value: ref,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    },\n    // \"slice\" implementation\n    slice: {\n      value: slice,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    }\n  })\n\n  // part of the \"array-index\" interface\n  ArrayType.prototype[ArrayIndex.get] = getter\n  ArrayType.prototype[ArrayIndex.set] = setter\n\n  // save down the \"fixedLength\" if specified. \"ref-struct\" needs this value\n  if (fixedLength > 0) {\n    ArrayType.fixedLength = fixedLength\n  }\n\n  // keep a reference to the base \"type\"\n  ArrayType.type = type\n  ArrayType.BYTES_PER_ELEMENT = type.indirection == 1 ? type.size : _ref.sizeof.pointer\n  assert(ArrayType.BYTES_PER_ELEMENT > 0)\n\n  // the ref \"type\" interface\n  if (fixedLength > 0) {\n    // this \"type\" is probably going in a ref-struct or being used manually\n    ArrayType.size = ArrayType.BYTES_PER_ELEMENT * fixedLength\n    ArrayType.alignment = type.alignment\n    ArrayType.indirection = 1\n    ArrayType.get = get\n    ArrayType.set = set\n  } else {\n    // this \"type\" is probably an argument/return value for a node-ffi function\n    ArrayType.size = _ref.sizeof.pointer\n    ArrayType.alignment = _ref.alignof.pointer\n    ArrayType.indirection = 1\n    ArrayType.get = getRef\n    ArrayType.set = setRef\n  }\n\n  // untilZeros() function\n  ArrayType.untilZeros = untilZeros\n\n  ArrayType.toString = function() { return '[ArrayType]';}\n\n  return ArrayType\n}\n\n/**\n * The \"get\" function of the Array \"type\" interface.\n * Most likely invoked when accessing within a \"ref-struct\" type.\n */\n\nfunction get (buffer, offset) {\n  debug('Array \"type\" getter for buffer at offset', offset)\n  if (offset > 0) {\n    buffer = buffer.slice(offset)\n  }\n  return new this(buffer)\n}\n\n/**\n * The \"set\" function of the Array \"type\" interface.\n * Most likely invoked when setting within a \"ref-struct\" type.\n */\n\nfunction set (buffer, offset, value) {\n  debug('Array \"type\" setter for buffer at offset', buffer, offset, value)\n  var array = this.get(buffer, offset)\n  var isInstance = value instanceof this\n  if (isInstance || isArray(value)) {\n    for (var i = 0; i < value.length; i++) {\n      array[i] = value[i]\n    }\n  } else {\n    throw new Error('not sure how to set into Array: ' + value)\n  }\n}\n\n/**\n * Reads a pointer from the given offset and returns a new \"array\" instance of\n * this type.\n * Most likely invoked when getting an array instance back as a return value from\n * an FFI'd function.\n */\n\nfunction getRef (buffer, offset) {\n  debug('Array reference \"type\" getter for buffer at offset', offset)\n  return new this(buffer.readPointer(offset))\n}\n\n/**\n * Most likely invoked when passing an array instance as an argument to an FFI'd\n * function.\n */\n\nfunction setRef (buffer, offset, value) {\n  debug('Array reference \"type\" setter for buffer at offset', offset)\n  var ptr\n  if (value instanceof this) {\n    ptr = value.buffer\n  } else {\n    ptr = new this(value).buffer\n  }\n  _ref.writePointer(buffer, offset, ptr)\n}\n\n/**\n * Returns a reference to the backing buffer of this Array instance.\n *\n * i.e. if the array represents `int[]` (a.k.a. `int *`),\n *      then the returned Buffer represents `int (*)[]` (a.k.a. `int **`)\n */\n\nfunction ref () {\n  debug('ref()')\n  var type = this.constructor\n  var origSize = this.buffer.length\n  var r = _ref.ref(this.buffer)\n  r.type = Object.create(_ref.types.CString)\n  r.type.get = function (buf, offset) {\n    return new type(_ref.readPointer(buf, offset | 0, origSize))\n  }\n  r.type.set = function () {\n    assert(0, 'implement!!!')\n  }\n  return r\n}\n\n/**\n * The \"getter\" implementation for the \"array-index\" interface.\n */\n\nfunction getter (index) {\n  debug('getting array[%d]', index)\n  var size = this.constructor.BYTES_PER_ELEMENT\n  var baseType = this.constructor.type\n  var offset = size * index\n  var end = offset + size\n  var buffer = this.buffer\n  if (buffer.length < end) {\n    debug('reinterpreting buffer from %d to %d', buffer.length, end)\n    buffer = _ref.reinterpret(buffer, end)\n  }\n  return _ref.get(buffer, offset, baseType)\n}\n\n/**\n * The \"setter\" implementation for  the \"array-index\" interface.\n */\n\nfunction setter (index, value) {\n  debug('setting array[%d]', index)\n  var size = this.constructor.BYTES_PER_ELEMENT\n  var baseType = this.constructor.type\n  var offset = size * index\n  var end = offset + size\n  var buffer = this.buffer\n  if (buffer.length < end) {\n    debug('reinterpreting buffer from %d to %d', buffer.length, end)\n    buffer = _ref.reinterpret(buffer, end)\n  }\n  // TODO: DRY with getter()\n\n  _ref.set(buffer, offset, value, baseType)\n  return value\n}\n\n/**\n * The \"slice\" implementation.\n */\n\nfunction slice (start, end) {\n  var data\n\n  if (end) {\n    debug('slicing array from %d to %d', start, end)\n    data = this.buffer.slice(start*this.constructor.BYTES_PER_ELEMENT, end*this.constructor.BYTES_PER_ELEMENT)\n  } else {\n    debug('slicing array from %d', start)\n    data = this.buffer.slice(start*this.constructor.BYTES_PER_ELEMENT)\n  }\n\n  return new this.constructor(data)\n}\n\n/**\n * Accepts a Buffer instance that should be an already-populated with data for the\n * ArrayType. The \"length\" of the Array is determined by searching through the\n * buffer's contents until an aligned NULL pointer is encountered.\n *\n * @param {Buffer} buffer the null-terminated buffer to convert into an Array\n * @api public\n */\n\nfunction untilZeros (buffer) {\n  return new this(_ref.reinterpretUntilZeros(buffer, this.type.size))\n}\n\nreturn Array_;\n\n}\n","\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};\n\n","\"use strict\";\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @api public\n  */\n\n\n  function disable() {\n    createDebug.enable('');\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;\n\n","\"use strict\";\n\n/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n\n","\"use strict\";\n\n/**\n * Module dependencies.\n */\nvar tty = require('tty');\n\nvar util = require('util');\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n  // Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n  // eslint-disable-next-line import/no-extraneous-dependencies\n  var supportsColor = require('supports-color');\n\n  if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n    exports.colors = [20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134, 135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 220, 221];\n  }\n} catch (error) {} // Swallow - we only care if `supports-color` is available; it doesn't have to be.\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // Camel-case\n  var prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, function (_, k) {\n    return k.toUpperCase();\n  }); // Coerce string value into JS value\n\n  var val = process.env[key];\n\n  if (/^(yes|on|true|enabled)$/i.test(val)) {\n    val = true;\n  } else if (/^(no|off|false|disabled)$/i.test(val)) {\n    val = false;\n  } else if (val === 'null') {\n    val = null;\n  } else {\n    val = Number(val);\n  }\n\n  obj[prop] = val;\n  return obj;\n}, {});\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);\n}\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var name = this.namespace,\n      useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var colorCode = \"\\x1B[3\" + (c < 8 ? c : '8;5;' + c);\n    var prefix = \"  \".concat(colorCode, \";1m\").concat(name, \" \\x1B[0m\");\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + \"\\x1B[0m\");\n  } else {\n    args[0] = getDate() + name + ' ' + args[0];\n  }\n}\n\nfunction getDate() {\n  if (exports.inspectOpts.hideDate) {\n    return '';\n  }\n\n  return new Date().toISOString() + ' ';\n}\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\n\nfunction log() {\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  if (namespaces) {\n    process.env.DEBUG = namespaces;\n  } else {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  return process.env.DEBUG;\n}\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\n\nfunction init(debug) {\n  debug.inspectOpts = {};\n  var keys = Object.keys(exports.inspectOpts);\n\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n')\n    .map(function (str) { return str.trim(); })\n    .join(' ');\n};\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\n\nformatters.O = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n","'use strict';\n/**\n * An interface for modeling and instantiating C-style data structures. This is\n * not a constructor per-say, but a constructor generator. It takes an array of\n * tuples, the left side being the type, and the right side being a field name.\n * The order should be the same order it would appear in the C-style struct\n * definition. It returns a function that can be used to construct an object that\n * reads and writes to the data structure using properties specified by the\n * initial field list.\n *\n * The only verboten field names are \"ref\", which is used used on struct\n * instances as a function to retrieve the backing Buffer instance of the\n * struct, and \"ref.buffer\" which contains the backing Buffer instance.\n *\n *\n * Example:\n *\n * ``` javascript\n * var ref = require('ref')\n * var Struct = require('ref-struct')\n *\n * // create the `char *` type\n * var charPtr = ref.refType(ref.types.char)\n * var int = ref.types.int\n *\n * // create the struct \"type\" / constructor\n * var PasswordEntry = Struct({\n *     'username': 'string'\n *   , 'password': 'string'\n *   , 'salt':     int\n * })\n *\n * // create an instance of the struct, backed a Buffer instance\n * var pwd = new PasswordEntry()\n * pwd.username = 'ricky'\n * pwd.password = 'rbransonlovesnode.js'\n * pwd.salt = (Math.random() * 1000000) | 0\n *\n * pwd.username // → 'ricky'\n * pwd.password // → 'rbransonlovesnode.js'\n * pwd.salt     // → 820088\n * ```\n */\n\n/**\n * Module dependencies.\n */\n\nvar util = require('util')\nvar assert = require('assert')\nvar debug = require('debug')('ref:struct')\n\n/**\n * Module exports.\n */\n\nmodule.exports = function (ref) {\n\n/**\n * The Struct \"type\" meta-constructor.\n */\n\nfunction Struct () {\n  debug('defining new struct \"type\"')\n\n  /**\n   * This is the \"constructor\" of the Struct type that gets returned.\n   *\n   * Invoke it with `new` to create a new Buffer instance backing the struct.\n   * Pass it an existing Buffer instance to use that as the backing buffer.\n   * Pass in an Object containing the struct fields to auto-populate the\n   * struct with the data.\n   */\n\n  function StructType (arg, data) {\n    if (!(this instanceof StructType)) {\n      return new StructType(arg, data)\n    }\n    debug('creating new struct instance')\n    var store\n    if (Buffer.isBuffer(arg)) {\n      debug('using passed-in Buffer instance to back the struct', arg)\n      assert(arg.length >= StructType.size, 'Buffer instance must be at least ' +\n          StructType.size + ' bytes to back this struct type')\n      store = arg\n      arg = data\n    } else {\n      debug('creating new Buffer instance to back the struct (size: %d)', StructType.size)\n      store = Buffer.alloc(StructType.size)\n    }\n\n    // set the backing Buffer store\n    store.type = StructType\n    this['ref.buffer'] = store\n\n    if (arg) {\n      for (var key in arg) {\n        // hopefully hit the struct setters\n        this[key] = arg[key]\n      }\n    }\n    StructType._instanceCreated = true\n  }\n\n  // make instances inherit from the `proto`\n  StructType.prototype = Object.create(proto, {\n    constructor: {\n        value: StructType\n      , enumerable: false\n      , writable: true\n      , configurable: true\n    }\n  })\n\n  StructType.defineProperty = defineProperty\n  StructType.toString = toString\n  StructType.fields = {}\n\n  var opt = (arguments.length > 0 && arguments[1]) ? arguments[1] : {};\n  // Setup the ref \"type\" interface. The constructor doubles as the \"type\" object\n  StructType.size = 0\n  StructType.alignment = 0\n  StructType.indirection = 1\n  StructType.isPacked = opt.packed ? Boolean(opt.packed) : false\n  StructType.get = get\n  StructType.set = set\n\n  // Read the fields list and apply all the fields to the struct\n  // TODO: Better arg handling... (maybe look at ES6 binary data API?)\n  var arg = arguments[0]\n  if (Array.isArray(arg)) {\n    // legacy API\n    arg.forEach(function (a) {\n      var type = a[0]\n      var name = a[1]\n      StructType.defineProperty(name, type)\n    })\n  } else if (typeof arg === 'object') {\n    Object.keys(arg).forEach(function (name) {\n      var type = arg[name]\n      StructType.defineProperty(name, type)\n    })\n  }\n\n  return StructType\n}\n\n/**\n * The \"get\" function of the Struct \"type\" interface\n */\n\nfunction get (buffer, offset) {\n  debug('Struct \"type\" getter for buffer at offset', buffer, offset)\n  if (offset > 0) {\n    buffer = buffer.slice(offset)\n  }\n  return new this(buffer)\n}\n\n/**\n * The \"set\" function of the Struct \"type\" interface\n */\n\nfunction set (buffer, offset, value) {\n  debug('Struct \"type\" setter for buffer at offset', buffer, offset, value)\n  var isStruct = value instanceof this\n  if (isStruct) {\n    // optimization: copy the buffer contents directly rather\n    // than going through the ref-struct constructor\n    value['ref.buffer'].copy(buffer, offset, 0, this.size)\n  } else {\n    if (offset > 0) {\n      buffer = buffer.slice(offset)\n    }\n    new this(buffer, value)\n  }\n}\n\n/**\n * Custom `toString()` override for struct type instances.\n */\n\nfunction toString () {\n  return '[StructType]'\n}\n\n/**\n * Adds a new field to the struct instance with the given name and type.\n * Note that this function will throw an Error if any instances of the struct\n * type have already been created, therefore this function must be called at the\n * beginning, before any instances are created.\n */\n\nfunction defineProperty (name, type) {\n  debug('defining new struct type field', name)\n\n  // allow string types for convenience\n  type = ref.coerceType(type)\n\n  assert(!this._instanceCreated, 'an instance of this Struct type has already ' +\n      'been created, cannot add new \"fields\" anymore')\n  assert.equal('string', typeof name, 'expected a \"string\" field name')\n  assert(type && /object|function/i.test(typeof type) && 'size' in type &&\n      'indirection' in type\n      , 'expected a \"type\" object describing the field type: \"' + type + '\"')\n  assert(type.indirection > 1 || type.size > 0,\n      '\"type\" object must have a size greater than 0')\n  assert(!(name in this.prototype), 'the field \"' + name +\n      '\" already exists in this Struct type')\n\n  var field = {\n    type: type\n  }\n  this.fields[name] = field\n\n  // define the getter/setter property\n  var desc = { enumerable: true , configurable: true }\n  desc.get = function () {\n    debug('getting \"%s\" struct field (offset: %d)', name, field.offset)\n    return ref.get(this['ref.buffer'], field.offset, type)\n  }\n  desc.set = function (value) {\n    debug('setting \"%s\" struct field (offset: %d)', name, field.offset, value)\n    return ref.set(this['ref.buffer'], field.offset, value, type)\n  }\n\n  // calculate the new size and field offsets\n  recalc(this)\n\n  Object.defineProperty(this.prototype, name, desc)\n}\n\nfunction recalc (struct) {\n\n  // reset size and alignment\n  struct.size = 0\n  struct.alignment = 0\n\n  var fieldNames = Object.keys(struct.fields)\n\n  // first loop through is to determine the `alignment` of this struct\n  fieldNames.forEach(function (name) {\n    var field = struct.fields[name]\n    var type = field.type\n    var alignment = type.alignment || ref.alignof.pointer\n    if (type.indirection > 1) {\n      alignment = ref.alignof.pointer\n    }\n    if (struct.isPacked) {\n      struct.alignment = Math.min(struct.alignment || alignment, alignment)\n    } else {\n      struct.alignment = Math.max(struct.alignment, alignment)\n    }\n  })\n\n  // second loop through sets the `offset` property on each \"field\"\n  // object, and sets the `struct.size` as we go along\n  fieldNames.forEach(function (name) {\n    var field = struct.fields[name]\n    var type = field.type\n\n    if (null != type.fixedLength) {\n      // \"ref-array\" types set the \"fixedLength\" prop. don't treat arrays like one\n      // contiguous entity. instead, treat them like individual elements in the\n      // struct. doing this makes the padding end up being calculated correctly.\n      field.offset = addType(type.type)\n      for (var i = 1; i < type.fixedLength; i++) {\n        addType(type.type)\n      }\n    } else {\n      field.offset = addType(type)\n    }\n  })\n\n  function addType (type) {\n    var offset = struct.size\n    var align = type.indirection === 1 ? type.alignment : ref.alignof.pointer\n    var padding = struct.isPacked ? 0 : (align - (offset % align)) % align\n    var size = type.indirection === 1 ? type.size : ref.sizeof.pointer\n\n    offset += padding\n\n    if (!struct.isPacked) {\n      assert.equal(offset % align, 0, \"offset should align\")\n    }\n\n    // adjust the \"size\" of the struct type\n    struct.size = offset + size\n\n    // return the calulated offset\n    return offset\n  }\n\n  // any final padding?\n  var left = struct.size % struct.alignment\n  if (left > 0) {\n    debug('additional padding to the end of struct:', struct.alignment - left)\n    struct.size += struct.alignment - left\n  }\n}\n\n/**\n * this is the custom prototype of Struct type instances.\n */\n\nvar proto = {}\n\n/**\n * set a placeholder variable on the prototype so that defineProperty() will\n * throw an error if you try to define a struct field with the name \"buffer\".\n */\n\nproto['ref.buffer'] = ref.NULL\n\n/**\n * Flattens the Struct instance into a regular JavaScript Object. This function\n * \"gets\" all the defined properties.\n *\n * @api public\n */\n\nproto.toObject = function toObject () {\n  var obj = {}\n  Object.keys(this.constructor.fields).forEach(function (k) {\n    obj[k] = this[k]\n  }, this)\n  return obj\n}\n\n/**\n * Basic `JSON.stringify(struct)` support.\n */\n\nproto.toJSON = function toJSON () {\n  return this.toObject()\n}\n\n/**\n * `.inspect()` override. For the REPL.\n *\n * @api public\n */\n\nproto.inspect = function inspect () {\n  var obj = this.toObject()\n  // add instance's \"own properties\"\n  Object.keys(this).forEach(function (k) {\n    obj[k] = this[k]\n  }, this)\n  return util.inspect(obj)\n}\n\n/**\n * returns a Buffer pointing to this struct data structure.\n */\n\nproto.ref = function ref () {\n  return this['ref.buffer']\n}\n\nreturn Struct;\n\n};\n","\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};\n\n","\"use strict\";\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @api public\n  */\n\n\n  function disable() {\n    createDebug.enable('');\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;\n\n","\"use strict\";\n\n/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n\n","\"use strict\";\n\n/**\n * Module dependencies.\n */\nvar tty = require('tty');\n\nvar util = require('util');\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n  // Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n  // eslint-disable-next-line import/no-extraneous-dependencies\n  var supportsColor = require('supports-color');\n\n  if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n    exports.colors = [20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134, 135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 220, 221];\n  }\n} catch (error) {} // Swallow - we only care if `supports-color` is available; it doesn't have to be.\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // Camel-case\n  var prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, function (_, k) {\n    return k.toUpperCase();\n  }); // Coerce string value into JS value\n\n  var val = process.env[key];\n\n  if (/^(yes|on|true|enabled)$/i.test(val)) {\n    val = true;\n  } else if (/^(no|off|false|disabled)$/i.test(val)) {\n    val = false;\n  } else if (val === 'null') {\n    val = null;\n  } else {\n    val = Number(val);\n  }\n\n  obj[prop] = val;\n  return obj;\n}, {});\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);\n}\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var name = this.namespace,\n      useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var colorCode = \"\\x1B[3\" + (c < 8 ? c : '8;5;' + c);\n    var prefix = \"  \".concat(colorCode, \";1m\").concat(name, \" \\x1B[0m\");\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + \"\\x1B[0m\");\n  } else {\n    args[0] = getDate() + name + ' ' + args[0];\n  }\n}\n\nfunction getDate() {\n  if (exports.inspectOpts.hideDate) {\n    return '';\n  }\n\n  return new Date().toISOString() + ' ';\n}\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\n\nfunction log() {\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  if (namespaces) {\n    process.env.DEBUG = namespaces;\n  } else {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  return process.env.DEBUG;\n}\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\n\nfunction init(debug) {\n  debug.inspectOpts = {};\n  var keys = Object.keys(exports.inspectOpts);\n\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n')\n    .map(function (str) { return str.trim(); })\n    .join(' ');\n};\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\n\nformatters.O = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n","'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet flagForceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tflagForceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tflagForceColor = 1;\n}\n\nfunction envForceColor() {\n\tif ('FORCE_COLOR' in env) {\n\t\tif (env.FORCE_COLOR === 'true') {\n\t\t\treturn 1;\n\t\t}\n\n\t\tif (env.FORCE_COLOR === 'false') {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn env.FORCE_COLOR.length === 0 ? 1 : Math.min(Number.parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, {streamIsTTY, sniffFlags = true} = {}) {\n\tconst noFlagForceColor = envForceColor();\n\tif (noFlagForceColor !== undefined) {\n\t\tflagForceColor = noFlagForceColor;\n\t}\n\n\tconst forceColor = sniffFlags ? flagForceColor : noFlagForceColor;\n\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (sniffFlags) {\n\t\tif (hasFlag('color=16m') ||\n\t\t\thasFlag('color=full') ||\n\t\t\thasFlag('color=truecolor')) {\n\t\t\treturn 3;\n\t\t}\n\n\t\tif (hasFlag('color=256')) {\n\t\t\treturn 2;\n\t\t}\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE', 'DRONE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = Number.parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream, options = {}) {\n\tconst level = supportsColor(stream, {\n\t\tstreamIsTTY: stream && stream.isTTY,\n\t\t...options\n\t});\n\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel({isTTY: tty.isatty(1)}),\n\tstderr: getSupportLevel({isTTY: tty.isatty(2)})\n};\n","import * as ref from \"ref-napi\";\r\nimport { ApiOl32 } from \"../api/Ol32/api\";\r\n\r\nconst propType = {\r\n  PROPERTY_GET: 0x2,\r\n  METHOD: 0x1,\r\n  PROPERTY_PUT: 0x4,\r\n  PROPERTY_PUTREF: 0x8,\r\n};\r\n\r\nlet lastComCreate: any;\r\n\r\ninterface IGuid {\r\n  pointer: any;\r\n  type: any;\r\n  name: string;\r\n}\r\n\r\n//GUID Global Unique Identifier List for Created COMs\r\nlet GUIDList: Array<IGuid> = [];\r\n\r\nexport abstract class Unknow {\r\n  guid: IGuid = { pointer: null, type: null, name: \"\" };\r\n  //COM object name\r\n  protected application = \"\";\r\n\r\n  constructor(prop?: any) {\r\n    this.CreateInstace(prop);\r\n  }\r\n\r\n  private CreateInstace(prop?: any) {\r\n    GUIDList.push(this.guid);\r\n    this.guid.type = propType.METHOD;\r\n    this.guid.name = this.constructor.name;\r\n\r\n    if (prop !== undefined && typeof prop === \"string\") {\r\n      this.application = prop || this.application;\r\n    } else if (prop !== undefined && typeof prop !== \"string\") {\r\n      this.guid.pointer = prop;\r\n\r\n      return;\r\n    }\r\n\r\n    if (lastComCreate === undefined) {\r\n      this.CreateTheFirstCom();\r\n    } else {\r\n      this.InitializeMethods();\r\n    }\r\n  }\r\n\r\n  private CreateTheFirstCom = () => {\r\n    const ProgID: any = Buffer.from(this.application + \"\\0\", \"ucs2\");\r\n    let responsePtr: any = ref.alloc(ref.types.uint32);\r\n    const HRESULT = ApiOl32.XvbaCoCreateInstance(ProgID, responsePtr);\r\n    this.guid.pointer = responsePtr;\r\n    lastComCreate = responsePtr;\r\n    console.log(HRESULT);\r\n  };\r\n\r\n  private InitializeMethods() {\r\n    const className = this.constructor.name;\r\n    const classNamePtr: any = Buffer.from(className + \"\\0\", \"ucs2\");\r\n    let responsePtr: any = ref.alloc(ref.types.uint32);\r\n    const HRESULT = ApiOl32.XvbaGetMethod(\r\n      lastComCreate,\r\n      responsePtr,\r\n      classNamePtr\r\n    );\r\n    this.guid.pointer = responsePtr;\r\n    lastComCreate = responsePtr;\r\n    console.log(HRESULT);\r\n  }\r\n\r\n  /**\r\n   * List of all COM objects create in C++\r\n   * @returns \r\n   */\r\n  static ListGUID() {\r\n    return GUIDList;\r\n  }\r\n\r\n  /**\r\n   * Release all COM\r\n   * \r\n   * C++ has no garbage collection and\r\n   * has to manually managed memory allocation/deallocation\r\n   * \r\n   */\r\n  static ReleaseAllCOM() {\r\n    if (GUIDList.length > 0) {\r\n      GUIDList.map((gui) => {\r\n        console.log(ApiOl32.XvbaRelease(gui.pointer), \":\", gui.name);\r\n      });\r\n      GUIDList = [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Release all COM With Delay\r\n   *\r\n   * C++ has no garbage collection and\r\n   * has to manually managed memory allocation/deallocation\r\n   * Some cases the delay on Release COMs is needed\r\n   *\r\n   * @param time: number default = 3000ms\r\n   */\r\n  static ReleaseAllCOMWithDelay(time = 3000) {\r\n    setTimeout(() => {\r\n      if (GUIDList.length > 0) {\r\n        GUIDList.map((gui) => {\r\n          console.log(ApiOl32.XvbaRelease(gui.pointer), \":\", gui.name);\r\n        });\r\n        GUIDList = [];\r\n      }\r\n    }, time);\r\n  }\r\n\r\n  /**\r\n   * Release all COM\r\n   * \r\n   * C++ has no garbage collection and\r\n   * has to manually managed memory allocation/deallocation\r\n   * @param className\r\n   */\r\n  static ReleaseSelectedCom(className?: string) {\r\n    if (GUIDList.length > 0) {\r\n      GUIDList.map((gui) => {\r\n        if (className != undefined) {\r\n          if (gui.name === className) {\r\n            console.log(ApiOl32.XvbaRelease(gui.pointer), \":\", gui.name);\r\n          }\r\n        }\r\n      });\r\n      GUIDList = [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Release all COM\r\n   *\r\n   * C++ has no garbage collection and\r\n   * has to manually managed memory allocation/deallocation\r\n   * @param className\r\n   */\r\n  public ReleaseCOM() {\r\n    ApiOl32.XvbaRelease(this.guid.pointer);\r\n    this.guid = { pointer: null, type: null, name: \"\" };\r\n  }\r\n}\r\n","import { Unknow } from \"./UnKnow\";\r\nimport * as ref from \"ref-napi\";\r\nlet ArrayType = require(\"ref-array-di\")(ref);\r\nvar StructType = require(\"ref-struct-di\")(ref);\r\nimport { ApiOl32 } from \"../api/Ol32/api\";\r\n\r\ninterface IResponse {\r\n  objectPtr: any;\r\n  value: any;\r\n}\r\n\r\nexport enum PropType {\r\n  STRING = 0,\r\n  INTEGER = 1,\r\n  BOOLEAN = 2,\r\n  NULL = 100,\r\n}\r\n\r\nexport abstract class XvbaCOM extends Unknow {\r\n  constructor(application?: string) {\r\n    super(application);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param propToCall <string> the name of the method | property | object to call IDispatch::Invoke\r\n   * @param param : arguments is an Array-like object\r\n   * @param type\r\n   * @returns\r\n   */\r\n  private _Invoke(\r\n    propToCall: string,\r\n    param?: any,\r\n    responseVariableType: number = PropType.INTEGER\r\n  ): IResponse | undefined {\r\n    try {\r\n      let response: IResponse = { objectPtr: null, value: null };\r\n      const inputPtr = this._PreparInvokeParams(\r\n        propToCall,\r\n        param,\r\n        responseVariableType\r\n      );\r\n      const { paramsArrayStrucPtr, totalArgs } =\r\n        this._MakeStructArrayOfParams(param);\r\n\r\n      const HRESULT = ApiOl32.XvbaCall(\r\n        inputPtr.pPropToCallPtr,\r\n        this.guid.pointer,\r\n        paramsArrayStrucPtr,\r\n        inputPtr.responsePtr,\r\n        inputPtr.valuePtr,\r\n        inputPtr.inputValueType,\r\n        totalArgs\r\n      );\r\n\r\n      response = { objectPtr: inputPtr.responsePtr, value: inputPtr.valuePtr };\r\n      console.log(HRESULT, \" : \", propToCall, param);\r\n      return response;\r\n    } catch (error) {\r\n      XvbaCOM.ReleaseAllCOM();\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  private _PreparInvokeParams(\r\n    propToCall: string,\r\n    param: any = \"\",\r\n    type: number\r\n  ) {\r\n    const pPropToCallPtr: any = Buffer.from(propToCall + \"\\0\", \"ucs2\");\r\n\r\n    let responsePtr: any = ref.alloc(ref.types.uint32);\r\n\r\n    let inputValueType = 1;\r\n\r\n    //Set the response Buffer type\r\n    let valuePtr: any;\r\n    if (type === PropType.INTEGER) {\r\n      valuePtr = ref.alloc(ref.types.int32);\r\n    } else if (type === PropType.STRING) {\r\n      valuePtr = ref.alloc(ref.types.CString);\r\n    }\r\n\r\n    return { pPropToCallPtr, responsePtr, valuePtr, inputValueType };\r\n  }\r\n\r\n  /**\r\n   * Check if the param is number or string for make the correct buffer\r\n   * @param param: any\r\n   * @returns  { paramPtr: Buffer, inputValueType:number }\r\n   */\r\n  private _MakeInputBufferType(param: any) {\r\n    let paramPtr: any;\r\n    let inputValueType = PropType.STRING;\r\n\r\n    if (param !== undefined && param !== \"\") {\r\n      let bufferType: any;\r\n      switch (typeof param) {\r\n        case \"number\":\r\n          inputValueType = PropType.INTEGER;\r\n          bufferType = ref.types.int32;\r\n          break;\r\n\r\n        case \"string\":\r\n          inputValueType = PropType.STRING;\r\n          bufferType = ref.types.CString;\r\n          break;\r\n\r\n        case \"boolean\":\r\n          inputValueType = PropType.INTEGER;\r\n          bufferType = ref.types.bool;\r\n          break;\r\n      }\r\n      paramPtr = ref.alloc(bufferType, param);\r\n    } else {\r\n      paramPtr = ref.NULL;\r\n      inputValueType = 100;\r\n    }\r\n\r\n    return { paramPtr, inputValueType };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Set Value to COM Property\r\n   *\r\n   * @param propToCall <string> COM Property name\r\n   * @param value string | number value to set to the property\r\n   * @param type <PropType>\r\n   */\r\n  private _SetValue(propToCall: string, value: any = \"\", type: number) {\r\n    const propToCallPtr: any = Buffer.from(propToCall + \"\\0\", \"ucs2\");\r\n\r\n    const { inputValueType, paramPtr } = this._MakeInputBufferType(value);\r\n\r\n    const HRESULT = ApiOl32.XvbaSetVal(\r\n      propToCallPtr,\r\n      this.guid.pointer,\r\n      paramPtr,\r\n      inputValueType\r\n    );\r\n    console.log(HRESULT);\r\n  }\r\n\r\n  /**\r\n   * Call to a COM Method that returns a XvbaCom Object\r\n   *\r\n   * @param propToCall:<string> Method Name\r\n   * @param args : arguments is an Array-like object <string | number | boolean >\r\n   * @returns XvbaCom\r\n   */\r\n  protected CallMethodToGetObject(propToCall: string, XCom: any, ...args: any) {\r\n    try {\r\n      let response: IResponse | undefined = this._Invoke(propToCall, args);\r\n\r\n      if (response !== undefined) {\r\n        return new XCom(response.objectPtr);\r\n      } else {\r\n        throw new Error(\"Fail on CallMethodToGetObject: undefined\");\r\n      }\r\n    } catch (error) {\r\n      XvbaCOM.ReleaseAllCOM();\r\n      throw new Error(\"Fail on CallMethodToGetObject\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Call to a COM Method that returns a String value\r\n   *\r\n   * @param propToCall:<string> Method Name\r\n   * @param args : arguments is an Array-like object <string | number | boolean >\r\n   * @returns string\r\n   */\r\n  protected CallMethodToGetString(propToCall: string, ...args: any) {\r\n    try {\r\n      const response: IResponse | undefined = this._Invoke(propToCall, args);\r\n      if (response !== undefined) {\r\n        return response.value.toString();\r\n      } else {\r\n        throw new Error(\"\");\r\n      }\r\n    } catch (error) {\r\n      XvbaCOM.ReleaseAllCOM();\r\n      throw new Error(\"Fail on CallMethodToGetString\");\r\n    }\r\n  }\r\n  /**\r\n   * Call to a COM Method that return void\r\n   *\r\n   * @param propToCall:<string> Method Name\r\n   * @param args : arguments is an Array-like object <string | number | boolean >\r\n   */\r\n  protected CallMethodToGetVoid(propToCall: string, ...param: any) {\r\n    try {\r\n      const response: IResponse | undefined = this._Invoke(propToCall, param);\r\n      if (response !== undefined) {\r\n      } else {\r\n        throw new Error(\"Fail on CallMethodToGetNumber\");\r\n      }\r\n    } catch (error) {\r\n      XvbaCOM.ReleaseAllCOM();\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Call to a COM Method that returns a Number Value\r\n   *\r\n   * @param propToCall:<string> Method Name\r\n   * @param args : arguments is an Array-like object <string | number | boolean >\r\n   * @returns number\r\n   */\r\n  protected CallMethodToGetNumber(propToCall: string, ...args: any) {\r\n    try {\r\n      const response: IResponse | undefined = this._Invoke(propToCall, args);\r\n      if (response !== undefined) {\r\n        return response.value.deref();\r\n      } else {\r\n        throw new Error(\"Fail on CallMethodToGetNumber\");\r\n      }\r\n    } catch (error) {\r\n      XvbaCOM.ReleaseAllCOM();\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get COM property/Object by name\r\n   *\r\n   * @param prop <string> the COM property Name\r\n   * @returns\r\n   */\r\n  protected GetPropByRef(prop: string) {\r\n    try {\r\n      const classNamePtr: any = Buffer.from(prop + \"\\0\", \"ucs2\");\r\n      let responsePtr: any = ref.alloc(ref.types.uint32);\r\n      const HRESULT = ApiOl32.XvbaGetMethod(\r\n        this.guid.pointer,\r\n        responsePtr,\r\n        classNamePtr\r\n      );\r\n\r\n      console.log(\"getPropByRef\", HRESULT);\r\n      return responsePtr;\r\n    } catch (error) {\r\n      XvbaCOM.ReleaseAllCOM();\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create COM object\r\n   * @param XvbaCom <XvbaCom>\r\n   * @param args : arguments is an Array-like object <string | number | boolean >\r\n   * @returns <XvbaCom>\r\n   */\r\n  protected CreateObject(XvbaCom: any, ...args: any) {\r\n    try {\r\n      const response: IResponse | undefined = this._Invoke(XvbaCom.name, args);\r\n      if (response === undefined) {\r\n        throw new Error(\"Error: GetObject Fail\");\r\n      } else {\r\n        return new XvbaCom(response.objectPtr);\r\n      }\r\n    } catch (error) {\r\n      XvbaCOM.ReleaseAllCOM();\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get COM number Property value by\r\n   * pass COM property name\r\n   *\r\n   * @param prop <string> COM Property name\r\n   * @param args : arguments is an Array-like object <string | number | boolean >\r\n   * @returns\r\n   */\r\n  protected GetNumbValue(prop: string, ...args: any): number {\r\n    try {\r\n      const response: IResponse | undefined = this._Invoke(\r\n        prop,\r\n        args,\r\n        PropType.INTEGER\r\n      );\r\n      if (response === undefined) {\r\n        throw new Error(\"Error: GetNumbValue Fail\");\r\n      } else {\r\n        return response.value.deref();\r\n      }\r\n    } catch (error) {\r\n      XvbaCOM.ReleaseAllCOM();\r\n      throw new Error(\"Fail on GetNumbValue\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get COM string Property value\r\n   *\r\n   * @param prop <string> COM Property name\r\n   * @param args : arguments is an Array-like object <string | number | boolean >\r\n   * @returns\r\n   */\r\n  protected GetStrValue(prop: string, ...args: any) {\r\n    try {\r\n      const response: IResponse | undefined = this._Invoke(\r\n        prop,\r\n        args,\r\n        PropType.STRING\r\n      );\r\n      if (response === undefined) {\r\n        throw new Error(\"Error: GetStrValue Fail\");\r\n      } else {\r\n        return response.value.deref();\r\n      }\r\n    } catch (error) {\r\n      XvbaCOM.ReleaseAllCOM();\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Set String Value to COM Property\r\n   *\r\n   * @param propToCall <string> COM Property name\r\n   * @param value string value to set to the property\r\n   * @returns void\r\n   */\r\n  protected SetStrValue(propToCall: string, value: string): void {\r\n    try {\r\n      this._SetValue(propToCall, value, PropType.STRING);\r\n    } catch (error) {\r\n      XvbaCOM.ReleaseAllCOM();\r\n      throw new Error(\"Fail on SetNumbValue\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Set Number Value to COM Property\r\n   *\r\n   * @param propToCall <string> COM Property name\r\n   * @param value string value to set to the property\r\n   * @returns void\r\n   */\r\n  protected SetNumbValue(propToCall: string, value: number): void {\r\n    try {\r\n      this._SetValue(propToCall, value, PropType.INTEGER);\r\n    } catch (error) {\r\n      XvbaCOM.ReleaseAllCOM();\r\n      throw new Error(\"Fail on SetNumbValue\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Set Boolean Value to COM Property\r\n   *\r\n   * @param propToCall <string> COM Property name\r\n   * @param value string value to set to the property\r\n   * @returns void\r\n   */\r\n  protected SetBooleanValue(propToCall: string, value: Boolean) {\r\n    try {\r\n      let propType: number;\r\n      if (value === true) {\r\n        propType = PropType.INTEGER;\r\n      } else if (value === false) {\r\n        propType = PropType.STRING;\r\n      } else {\r\n        throw new Error(\"Error: Boolean value not set\");\r\n      }\r\n      return this._SetValue(propToCall, value, propType);\r\n    } catch (error) {\r\n      XvbaCOM.ReleaseAllCOM();\r\n      throw new Error(\"Fail on SetBooleanValue\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check the param type receive from  functions and return a number\r\n   * correspond to the type in C++\r\n   * @param value\r\n   * @returns\r\n   */\r\n  private _GetParamType(value: string | number | boolean) {\r\n    let type: number | undefined;\r\n\r\n    switch (typeof value) {\r\n      case \"number\":\r\n        type = PropType.INTEGER;\r\n        break;\r\n      case \"string\":\r\n        type = PropType.STRING;\r\n        break;\r\n      case \"boolean\":\r\n        type = PropType.INTEGER;\r\n        break;\r\n      default:\r\n        type = PropType.NULL;\r\n        break;\r\n    }\r\n\r\n    return { type };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Receive args from functions and convert on Array of Struct for C++\r\n   *\r\n   * @param args Array<any>\r\n   * @returns\r\n   */\r\n  private _MakeStructArrayOfParams(args: any): any {\r\n    if (args.length !== 0) {\r\n      let structData = StructType({\r\n        type: ref.types.int32,\r\n        intValue: ref.types.int32,\r\n        stringValue: ref.types.CString,\r\n        boolValue: ref.types.bool,\r\n      });\r\n\r\n      let StructArray = ArrayType(structData);\r\n\r\n      const totalArgs = args.length;\r\n      let paramArrayStruct = new StructArray(totalArgs);\r\n\r\n      args.forEach((param: number | string | boolean, index: number) => {\r\n        const paramStructType = this._GetParamType(param);\r\n\r\n        // define the \"timeval\" struct type\r\n        const structDataItem = {\r\n          type: paramStructType.type,\r\n          intValue: paramStructType.type === PropType.INTEGER ? param : 0,\r\n          stringValue: paramStructType.type === PropType.STRING ? param : \"\",\r\n          boolValue: paramStructType.type === PropType.BOOLEAN ? param : 0,\r\n        };\r\n\r\n        const structItem = new structData(structDataItem);\r\n\r\n        paramArrayStruct[index] = structItem;\r\n      });\r\n\r\n      let paramsArrayStrucPtr = ref.alloc(StructArray, paramArrayStruct);\r\n\r\n      return { paramsArrayStrucPtr, totalArgs };\r\n    } else {\r\n      return { paramsArrayStrucPtr: ref.NULL, totalArgs: 0 };\r\n    }\r\n  }\r\n}\r\n","import { XvbaCOM } from \"./XvbaCom\";\r\nexport {XvbaCOM};","import * as ffi from \"ffi-napi\";\r\nimport * as path from \"path\";\r\nimport * as os from \"os\";\r\n\r\nconst getDllFile = () => {\r\n  if (os.arch() === \"x64\") {\r\n    return path.join(__dirname, \"lib\", \"64\", \"XvbaCom.dll\");\r\n  } else {\r\n    return path.join(__dirname, \"lib\", \"32\", \"XvbaCom.dll\");\r\n  }\r\n};\r\n\r\nexport const ApiOl32 = ffi.Library(getDllFile(), {\r\n  XvbaCoCreateInstance: [\"int\", [\"pointer\", \"pointer\"]],\r\n  XvbaGetMethod: [\"int\", [\"pointer\", \"pointer\", \"pointer\"]],\r\n  XvbaGetPropertyRef: [\"int\", [\"pointer\", \"pointer\", \"pointer\"]],\r\n  XvbaCall: [\r\n    \"int\",\r\n    [\"pointer\", \"pointer\", \"void*\", \"pointer\", \"pointer\", \"int\",\"int\"],\r\n  ],\r\n  XvbaSetVal: [\"int\", [\"pointer\", \"pointer\", \"pointer\", \"int\"]],\r\n  XvbaRelease:[\"int\",[\"pointer\"]],\r\n});\"\"\r\n","\"use strict\";\n\nvar isPrototype = require(\"../prototype/is\");\n\nmodule.exports = function (value) {\n\tif (typeof value !== \"function\") return false;\n\n\tif (!hasOwnProperty.call(value, \"length\")) return false;\n\n\ttry {\n\t\tif (typeof value.length !== \"number\") return false;\n\t\tif (typeof value.call !== \"function\") return false;\n\t\tif (typeof value.apply !== \"function\") return false;\n\t} catch (error) {\n\t\treturn false;\n\t}\n\n\treturn !isPrototype(value);\n};\n","\"use strict\";\n\nvar isValue = require(\"../value/is\");\n\n// prettier-ignore\nvar possibleTypes = { \"object\": true, \"function\": true, \"undefined\": true /* document.all */ };\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\treturn hasOwnProperty.call(possibleTypes, typeof value);\n};\n","\"use strict\";\n\nvar isFunction = require(\"../function/is\");\n\nvar classRe = /^\\s*class[\\s{/}]/, functionToString = Function.prototype.toString;\n\nmodule.exports = function (value) {\n\tif (!isFunction(value)) return false;\n\tif (classRe.test(functionToString.call(value))) return false;\n\treturn true;\n};\n","\"use strict\";\n\nvar isObject = require(\"../object/is\");\n\nmodule.exports = function (value) {\n\tif (!isObject(value)) return false;\n\ttry {\n\t\tif (!value.constructor) return false;\n\t\treturn value.constructor.prototype === value;\n\t} catch (error) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\n// ES3 safe\nvar _undefined = void 0;\n\nmodule.exports = function (value) { return value !== _undefined && value !== null; };\n","module.exports = require(\"ffi-napi\");","module.exports = require(\"ref-napi\");","module.exports = require(\"assert\");","module.exports = require(\"fs\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"tty\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { XvbaCOM } from \"./XvbaComJs\";\r\nexport { XvbaCOM };\r\n"],"names":[],"sourceRoot":""}